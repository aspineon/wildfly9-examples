#
# -Djboss.bin.address=
#
#CLEANUP
:stop-servers(blocking=true)
/host=master/server-config=server-one:remove
/host=master/server-config=server-two:remove
/host=master/server-config=server-three:remove
/server-group=main-server-group:remove
/server-group=other-server-group:remove

#BACKEND CONFIG
/profile=ha/subsystem=undertow/server=default-server/host=default-host:write-attribute(name=alias, value=[192.168.1.4])

/server-group=backend-servers:add(profile=ha, socket-binding-group=ha-sockets)

/host=master/server-config=backend1:add(group=backend-servers, socket-binding-port-offset=100)
/host=master/server-config=backend2:add(group=backend-servers, socket-binding-port-offset=200)

/server-group=backend-servers:start-servers

#Deploy the demo to our backend servers
deploy ~/workspace/examples/modcluster/load-balancing-demo/target/clustering-demo.war --server-groups=backend-servers

#LOAD BALANCER CONFIG
/profile=default/subsystem=undertow/configuration=filter/mod-cluster=modcluster:add(management-socket-binding=http, advertise-socket-binding=modcluster)
/profile=default/subsystem=undertow/server=default-server/host=default-host/filter-ref=modcluster:add
/socket-binding-group=standard-sockets/socket-binding=modcluster:add(port=23364, multicast-address=224.0.1.105)

/server-group=load-balancer:add(profile=default, socket-binding-group=standard-sockets)
/host=master/server-config=load-balancer:add(group=load-balancer)

/server-group=load-balancer:start-servers
